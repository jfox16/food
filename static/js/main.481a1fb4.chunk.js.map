{"version":3,"sources":["components/FoodList/FoodListItem.js","store/food/actionTypes.js","store/food/reducer.js","store/food/actions.js","components/FoodList/FoodList.js","components/FoodList/index.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["fadeInAnimation","keyframes","StyledFoodImg","styled","img","FoodListItem","props","src","onLoad","i","showImage","console","log","style","display","alt","FETCH_FOOD_START","FETCH_FOOD_SUCCESS","FETCH_FOOD_FAILURE","initialState","isLoading","error","images","fetchFood","dispatch","type","axiosRequests","push","axios","get","all","then","responses","foodImages","map","res","data","image","payload","catch","err","actions","StyledFullWidthContainer","div","StyledFoodList","FoodList","connect","state","food","useState","imagesLoaded","setImagesLoaded","highestLoaded","setHighestLoaded","useEffect","newHighestLoaded","length","foodImage","newImagesLoaded","handleImageLoad","StyledApp","StyledTitle","h1","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.481a1fb4.chunk.js","sourcesContent":["\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst FoodListItem = (props) => {\r\n\r\n  const { src, onLoad, i, showImage } = props;\r\n\r\n  if (showImage) {\r\n    console.log('SHOWING ' + i + '!');\r\n  }\r\n\r\n  return (\r\n    <StyledFoodImg\r\n      style={showImage ? {} : {display: 'none'}}\r\n      src={src}\r\n      alt='food'\r\n      onLoad={onLoad}\r\n    />\r\n  );\r\n}\r\n\r\nconst fadeInAnimation = keyframes`\r\n  0% { opacity: 0.0 }\r\n  100% { opacity: 1.0 }\r\n`;\r\n\r\nconst StyledFoodImg = styled.img`\r\n  height: 250px;\r\n  width: auto;\r\n  max-width: 400px;\r\n  flex-grow: 1;\r\n  object-fit: cover;\r\n  padding: 1px;\r\n\r\n  animation: 1s ${fadeInAnimation};\r\n\r\n  @media (max-width: 768px) {\r\n    height: 150px;\r\n    max-width: 240px;\r\n  }\r\n\r\n  @media (max-width: 400px) {\r\n    height: 100px;\r\n    max-width: 160px;\r\n  }\r\n`;\r\n\r\nexport default FoodListItem;","\r\nexport const FETCH_FOOD_START = 'FETCH_FOOD_IMAGES_START';\r\nexport const FETCH_FOOD_SUCCESS = 'FETCH_FOOD_IMAGES_SUCCESS';\r\nexport const FETCH_FOOD_FAILURE = 'FETCH_FOOD_IMAGES_FAILURE';","\r\nimport {\r\n  FETCH_FOOD_START,\r\n  FETCH_FOOD_SUCCESS,\r\n  FETCH_FOOD_FAILURE\r\n} from './actionTypes';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: '',\r\n  images: []\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n\r\n    case FETCH_FOOD_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n\r\n    case FETCH_FOOD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        images: [ ...state.images, ...action.payload ],\r\n        isLoading: false\r\n      };\r\n\r\n    case FETCH_FOOD_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isLoading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n\r\n  }\r\n}","\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  FETCH_FOOD_START,\r\n  FETCH_FOOD_SUCCESS,\r\n  FETCH_FOOD_FAILURE\r\n} from './actionTypes';\r\n\r\nconst BASE_URL = 'https://foodish-api.herokuapp.com/api'\r\nconst NUM_IMAGES = 50;\r\n\r\nexport const fetchFood = () => {\r\n  return (dispatch) => {\r\n\r\n    dispatch({ type: FETCH_FOOD_START });\r\n\r\n    const axiosRequests = [];\r\n    for (let i = 0; i < NUM_IMAGES; i++) {\r\n      axiosRequests.push(axios.get(BASE_URL));\r\n    }\r\n\r\n    axios.all(axiosRequests)\r\n      .then(responses => {\r\n        const foodImages = responses.map(res => res.data.image);\r\n        dispatch({ type: FETCH_FOOD_SUCCESS, payload: foodImages });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        dispatch({ type: FETCH_FOOD_FAILURE });\r\n      });\r\n\r\n    \r\n  }\r\n}","\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport FoodListItem from './FoodListItem';\r\n\r\nimport { actions } from 'store/food';\r\nconst { fetchFood } = actions;\r\n\r\n\r\n\r\nconst FoodList = (props) => {\r\n\r\n  const { foodImages, fetchFood, isLoading, error } = props;\r\n\r\n  const [ imagesLoaded, setImagesLoaded ] = useState([]);\r\n  const [ highestLoaded, setHighestLoaded ] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    fetchFood();\r\n  }, [ fetchFood ]);\r\n\r\n  useEffect(() => {\r\n    setImagesLoaded([]);\r\n  }, [ foodImages ]);\r\n\r\n  useEffect(() => {\r\n    let newHighestLoaded = highestLoaded;\r\n    for (let i = highestLoaded + 1; i < imagesLoaded.length; i++) {\r\n      if (imagesLoaded[i]) {\r\n        newHighestLoaded = i;\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n    setHighestLoaded(newHighestLoaded);\r\n  }, [ highestLoaded, imagesLoaded ]);\r\n\r\n  const handleImageLoad = (i) => {\r\n    const newImagesLoaded = [ ...imagesLoaded ];\r\n    newImagesLoaded[i] = true;\r\n    console.log(newImagesLoaded);\r\n    setImagesLoaded(newImagesLoaded);\r\n  }\r\n\r\n  return (\r\n    <StyledFullWidthContainer>\r\n        <StyledFoodList>\r\n          {!isLoading && !error &&\r\n            foodImages?.map((foodImage, i) => (\r\n              <FoodListItem\r\n                src={foodImage}\r\n                key={i}\r\n                i={i}\r\n                onLoad={() => handleImageLoad(i)}\r\n                showImage={highestLoaded >= i}\r\n              />\r\n            ))\r\n          }\r\n        </StyledFoodList>\r\n    </StyledFullWidthContainer>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst StyledFullWidthContainer = styled.div`\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst StyledFoodList = styled.div`\r\n  position: relative;\r\n  left: -1px;\r\n  width: calc(100% + 2px);\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    foodImages: state.food.images,\r\n    isLoading: state.food.isLoading,\r\n    error: state.food.error\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchFood }\r\n)(FoodList);","\r\nimport FoodList from './FoodList';\r\nexport default FoodList;","\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport './App.css';\n\nimport FoodList from 'components/FoodList';\n\nfunction App() {\n  return (\n    <StyledApp className=\"App\">\n      <StyledTitle>Food</StyledTitle>\n      <FoodList />\n    </StyledApp>\n  );\n}\n\nconst StyledApp = styled.div`\n  font-size: 16px;\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n  \n  @media (max-width: 400px) {\n    font-size: 12px;\n  }\n`;\n\nconst StyledTitle = styled.h1`\n  font-family: 'Playfair Display', serif;\n  font-size: 3em;\n  text-transform: uppercase;\n  letter-spacing: 0.07em;\n  margin: 0.4em;\n  color: hsl(0, 0%, 25%);\n`;\n\nexport default connect()(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { combineReducers } from 'redux';\r\nimport { reducer as foodReducer } from './food';\r\n\r\nexport const reducer = combineReducers({\r\n  food: foodReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport { reducer } from './store';\n\nconst store = createStore( reducer, applyMiddleware( thunk, logger ) );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}